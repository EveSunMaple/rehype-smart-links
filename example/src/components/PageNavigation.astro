---
// Define the navigation structure
interface NavLink {
  path: string;
  title: string;
}

interface NavSection {
  title: string;
  links: NavLink[];
}

// Navigation structure for Chinese
const zhNavigation: NavSection[] = [
  {
    title: "导航",
    links: [
      { path: "/", title: "首页" },
      { path: "/about", title: "关于" },
    ],
  },
  {
    title: "快速上手",
    links: [
      { path: "/quick-start", title: "安装指南" },
      { path: "/quick-start/route-script", title: "路由脚本" },
    ],
  },
  {
    title: "演示",
    links: [
      { path: "/demo/basic", title: "基本演示" },
      { path: "/demo/advanced", title: "高级功能" },
      { path: "/demo/custom-icon", title: "自定义图标" },
      { path: "/demo/custom-css", title: "CSS自定义样式" },
      { path: "/demo/tailwind", title: "Tailwind样式" },
      { path: "/demo/daisyui", title: "DaisyUI组件" },
    ],
  },
];

// Navigation structure for English
const enNavigation: NavSection[] = [
  {
    title: "Navigation",
    links: [
      { path: "/en", title: "Home" },
      { path: "/en/about", title: "About" },
    ],
  },
  {
    title: "Quick Start",
    links: [
      { path: "/en/quick-start", title: "Installation Guide" },
      { path: "/en/quick-start/route-script", title: "Route Script" },
    ],
  },
  {
    title: "Demos",
    links: [
      { path: "/en/demo/basic", title: "Basic Demo" },
      { path: "/en/demo/advanced", title: "Advanced Features" },
      { path: "/en/demo/custom-icon", title: "Custom Icons" },
      { path: "/en/demo/custom-css", title: "CSS Custom Styles" },
      { path: "/en/demo/tailwind", title: "Tailwind Styles" },
      { path: "/en/demo/daisyui", title: "DaisyUI Styles" },
    ],
  },
];

// Component props
export interface Props {
  currentPath: string;
  lang?: "zh" | "en";
  editPath?: string;
}

const { 
  currentPath, 
  lang = "zh",
  editPath = `example/src/pages${currentPath}${currentPath.endsWith('/') ? 'index.mdx' : '.mdx'}`
} = Astro.props;

// Select the appropriate navigation based on language
const navigation = lang === "zh" ? zhNavigation : enNavigation;

// Flatten the navigation for finding prev/next
const flatNav: NavLink[] = navigation.flatMap((section) => section.links);

// Find current index
const currentIndex = flatNav.findIndex((link) => link.path === currentPath);

// Determine prev and next links
const prevLink = currentIndex > 0 ? flatNav[currentIndex - 1] : null;
const nextLink = currentIndex < flatNav.length - 1 ? flatNav[currentIndex + 1] : null;

// GitHub repo info
const githubRepo = "https://github.com/EveSunMaple/rehype-smart-links";
const githubEditUrl = `${githubRepo}/edit/main/${editPath}`;

// Translations
const translations = {
  zh: {
    prevPage: "上一页",
    nextPage: "下一页",
    editOnGitHub: "在 GitHub 上编辑此页面",
    projectInfo: "rehype-smart-links 项目",
    copyright: "版权所有",
  },
  en: {
    prevPage: "Previous",
    nextPage: "Next",
    editOnGitHub: "Edit this page on GitHub",
    projectInfo: "rehype-smart-links Project",
    copyright: "Copyright",
  },
};

const t = translations[lang];
const currentYear = new Date().getFullYear();
---

<div class="page-navigation mt-16 pt-8 border-t border-base-300 not-prose">
  <!-- Navigation buttons -->
  <div class="flex justify-between items-center mb-6">
    {prevLink ? (
      <a href={prevLink.path} class="btn btn-outline btn-sm gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        {t.prevPage}: {prevLink.title}
      </a>
    ) : (
      <span></span>
    )}

    {nextLink ? (
      <a href={nextLink.path} class="btn btn-primary btn-sm gap-2">
        {t.nextPage}: {nextLink.title}
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </a>
    ) : (
      <span></span>
    )}
  </div>

  <!-- Info section -->
  <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center text-sm text-base-content/70 mt-4">
    <div class="flex items-center gap-2 mb-2 sm:mb-0">
      <span>{t.copyright} © {currentYear}</span>
      <span class="text-primary font-medium">{t.projectInfo}</span>
    </div>
    
    <a href={githubEditUrl} target="_blank" rel="noopener noreferrer" class="flex items-center gap-2 text-base-content/70 hover:text-primary transition-colors">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
      </svg>
      {t.editOnGitHub}
    </a>
  </div>
</div>

<style>
  .page-navigation {
    margin-top: 3rem;
  }
</style> 